
SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

CREATE EXTENSION IF NOT EXISTS "pgsodium" WITH SCHEMA "pgsodium";

CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";

CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgjwt" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";

CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";

SET default_tablespace = '';

SET default_table_access_method = "heap";

CREATE TABLE IF NOT EXISTS "public"."authors" (
    "id" bigint NOT NULL,
    "name" character varying NOT NULL,
    "id_user" "uuid",
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL
);

ALTER TABLE "public"."authors" OWNER TO "postgres";

ALTER TABLE "public"."authors" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."authors_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."references" (
    "id" bigint NOT NULL,
    "title" character varying,
    "date_of_publication" "date",
    "editoral" character varying,
    "publication_place" character varying,
    "note" character varying,
    "file" character varying NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "id_user" "uuid"
);

ALTER TABLE "public"."references" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."references-authors" (
    "id" bigint NOT NULL,
    "id_reference" bigint,
    "id_author" bigint,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL
);

ALTER TABLE "public"."references-authors" OWNER TO "postgres";

ALTER TABLE "public"."references-authors" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."references-authors_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."references-tags" (
    "id" bigint NOT NULL,
    "id_reference" bigint,
    "id_tag" bigint,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL
);

ALTER TABLE "public"."references-tags" OWNER TO "postgres";

ALTER TABLE "public"."references-tags" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."references-tags_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE "public"."references" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."references_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."roles" (
    "id" bigint NOT NULL,
    "name" character varying NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL
);

ALTER TABLE "public"."roles" OWNER TO "postgres";

ALTER TABLE "public"."roles" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."roles_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."tags" (
    "id" bigint NOT NULL,
    "name" character varying NOT NULL,
    "color" character varying NOT NULL,
    "id_user" "uuid",
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL
);

ALTER TABLE "public"."tags" OWNER TO "postgres";

ALTER TABLE "public"."tags" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."tags_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."user-roles" (
    "id" bigint NOT NULL,
    "id_user" "uuid",
    "id_roles" bigint,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL
);

ALTER TABLE "public"."user-roles" OWNER TO "postgres";

ALTER TABLE "public"."user-roles" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."user-roles_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE ONLY "public"."authors"
    ADD CONSTRAINT "authors_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."references-authors"
    ADD CONSTRAINT "references-authors_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."references-tags"
    ADD CONSTRAINT "references-tags_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."references"
    ADD CONSTRAINT "references_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."roles"
    ADD CONSTRAINT "roles_name_key" UNIQUE ("name");

ALTER TABLE ONLY "public"."roles"
    ADD CONSTRAINT "roles_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."tags"
    ADD CONSTRAINT "tags_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."user-roles"
    ADD CONSTRAINT "user-roles_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."authors"
    ADD CONSTRAINT "authors_id_user_fkey" FOREIGN KEY ("id_user") REFERENCES "auth"."users"("id") ON UPDATE RESTRICT ON DELETE RESTRICT;

ALTER TABLE ONLY "public"."references-authors"
    ADD CONSTRAINT "references-authors_id_author_fkey" FOREIGN KEY ("id_author") REFERENCES "public"."authors"("id") ON UPDATE RESTRICT ON DELETE RESTRICT;

ALTER TABLE ONLY "public"."references-authors"
    ADD CONSTRAINT "references-authors_id_reference_fkey" FOREIGN KEY ("id_reference") REFERENCES "public"."references"("id") ON UPDATE RESTRICT ON DELETE RESTRICT;

ALTER TABLE ONLY "public"."references-tags"
    ADD CONSTRAINT "references-tags_id_reference_fkey" FOREIGN KEY ("id_reference") REFERENCES "public"."references"("id") ON UPDATE RESTRICT ON DELETE RESTRICT;

ALTER TABLE ONLY "public"."references-tags"
    ADD CONSTRAINT "references-tags_id_tag_fkey" FOREIGN KEY ("id_tag") REFERENCES "public"."tags"("id") ON UPDATE RESTRICT ON DELETE RESTRICT;

ALTER TABLE ONLY "public"."references"
    ADD CONSTRAINT "references_id_user_fkey" FOREIGN KEY ("id_user") REFERENCES "auth"."users"("id") ON UPDATE RESTRICT ON DELETE RESTRICT;

ALTER TABLE ONLY "public"."tags"
    ADD CONSTRAINT "tags_id_user_fkey" FOREIGN KEY ("id_user") REFERENCES "auth"."users"("id") ON UPDATE RESTRICT ON DELETE RESTRICT;

ALTER TABLE ONLY "public"."user-roles"
    ADD CONSTRAINT "user-roles_id_roles_fkey" FOREIGN KEY ("id_roles") REFERENCES "public"."roles"("id") ON UPDATE RESTRICT ON DELETE RESTRICT;

ALTER TABLE ONLY "public"."user-roles"
    ADD CONSTRAINT "user-roles_id_user_fkey" FOREIGN KEY ("id_user") REFERENCES "auth"."users"("id") ON UPDATE RESTRICT ON DELETE RESTRICT;

ALTER TABLE "public"."authors" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."references" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."references-authors" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."references-tags" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."roles" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."tags" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."user-roles" ENABLE ROW LEVEL SECURITY;

GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";

GRANT ALL ON TABLE "public"."authors" TO "anon";
GRANT ALL ON TABLE "public"."authors" TO "authenticated";
GRANT ALL ON TABLE "public"."authors" TO "service_role";

GRANT ALL ON SEQUENCE "public"."authors_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."authors_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."authors_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."references" TO "anon";
GRANT ALL ON TABLE "public"."references" TO "authenticated";
GRANT ALL ON TABLE "public"."references" TO "service_role";

GRANT ALL ON TABLE "public"."references-authors" TO "anon";
GRANT ALL ON TABLE "public"."references-authors" TO "authenticated";
GRANT ALL ON TABLE "public"."references-authors" TO "service_role";

GRANT ALL ON SEQUENCE "public"."references-authors_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."references-authors_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."references-authors_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."references-tags" TO "anon";
GRANT ALL ON TABLE "public"."references-tags" TO "authenticated";
GRANT ALL ON TABLE "public"."references-tags" TO "service_role";

GRANT ALL ON SEQUENCE "public"."references-tags_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."references-tags_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."references-tags_id_seq" TO "service_role";

GRANT ALL ON SEQUENCE "public"."references_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."references_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."references_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."roles" TO "anon";
GRANT ALL ON TABLE "public"."roles" TO "authenticated";
GRANT ALL ON TABLE "public"."roles" TO "service_role";

GRANT ALL ON SEQUENCE "public"."roles_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."roles_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."roles_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."tags" TO "anon";
GRANT ALL ON TABLE "public"."tags" TO "authenticated";
GRANT ALL ON TABLE "public"."tags" TO "service_role";

GRANT ALL ON SEQUENCE "public"."tags_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."tags_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."tags_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."user-roles" TO "anon";
GRANT ALL ON TABLE "public"."user-roles" TO "authenticated";
GRANT ALL ON TABLE "public"."user-roles" TO "service_role";

GRANT ALL ON SEQUENCE "public"."user-roles_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."user-roles_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."user-roles_id_seq" TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";

RESET ALL;
